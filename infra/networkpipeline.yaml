AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS CloudFormation Sample Template Continuous Delievery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks. Submit a CloudFormation source artifact
  to an Amazon S3 location before building the pipeline. The pipeline uses the
  artifact to automatically create stacks and change sets.
  **WARNING** This template creates Amazon EC2 instances. You will be billed
  for the AWS resources used when you create a stack using this template.

Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
  S3Bucket:
    Description: The name of the S3 bucket that contains the source artifact, which must be in the same region as this stack
    Type: String
  SourceS3Key:
    Default: networktemplates.zip
    Description: The file name of the source artifact, such as myfolder/myartifact.zip
    Type: String
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
  DeployEnvironment:
    Type: String
    Description: Specify the environment
    Default: dev-and-staging
    AllowedValues:
      - production
      - dev-and-staging
    ConstraintDescription: Must specify production, staging, hotfix, development or feature.
Conditions:
  IsProductionCondition: !Equals [ !Ref DeployEnvironment, production ]
  IsStagingCondition: !Equals [ !Ref DeployEnvironment, dev-and-staging ]

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: S3Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: !Ref 'S3Bucket'
                S3ObjectKey: !Ref 'SourceS3Key'
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: '1'
        - Name: DevEnvironment
          Actions:
            - Name: Create-DevVPC
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Join ["-", ["Ref":"AWS::StackName", "DevEnvironment-VPC"]]
                TemplateConfiguration: TemplateSource::networkconfig.json
                TemplatePath: TemplateSource::vpc.yaml
                ParameterOverrides: !Sub |
                  {
                    "EnvironmentName": "${AWS::StackName}-DevEnvironment"
                  }
              RunOrder: '1'
            - Name: Create-DevSGs
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Join ["-", ["Ref":"AWS::StackName", "DevEnvironment-SecurityGroups"]]
                TemplatePath: TemplateSource::security-groups.yaml
                ParameterOverrides: |
                  {
                    "EnvironmentName": "${AWS::StackName}-DevEnvironment"
                  }
              RunOrder: '2'
        - Name: StagingEnvironment
          Actions:
            - Name: Create-VPC-ChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Join ["-", ["Ref":"AWS::StackName", "StagingEnvironment-VPC"]]
                ChangeSetName: ChangesToProdVPC
                TemplateConfiguration: TemplateSource::networkconfig.json
                TemplatePath: TemplateSource::vpc.yaml
                ParameterOverrides: |
                  {
                    "EnvironmentName": "${AWS::StackName}-StagingEnvironment"
                  }
            - Name: Create-SG-ChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Join ["-", ["Ref":"AWS::StackName", "StagingEnvironment-SecurityGroups"]]
                ChangeSetName: ChangesToProdSecurityGroups
                TemplatePath: TemplateSource::security-groups.yaml
                ParameterOverrides: |
                  {
                    "EnvironmentName": "${AWS::StackName}-StagingEnvironment"
                  }
              RunOrder: '1'
            - Name: ApproveChangeSets
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: 'New change sets were created please review and approve if you want to implement the changes?'
              RunOrder: '2'
            - Name: Execute-VPC-ChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Join ["-", ["Ref":"AWS::StackName", "StagingEnvironment-VPC"]]
                ChangeSetName: ChangesToProdVPC
              RunOrder: '3'
            - Name: Execute-SG-ChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Join ["-", ["Ref":"AWS::StackName", "StagingEnvironment-SecurityGroups"]]
                ChangeSetName: ChangesToProdSecurityGroups
              RunOrder: '4'


  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - '*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                Effect: Allow
                Resource: '*'
